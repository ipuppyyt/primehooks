name: Check Package Version Update

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-version:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
      contents: read
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get current package.json version
        id: current-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }}

      - name: Get base package.json version
        id: base-version
        run: |
          VERSION=$(git show origin/${{ github.base_ref }}:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf-8')).version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare
        run: |
          CURRENT="${{ steps.current-version.outputs.version }}"
          BASE="${{ steps.base-version.outputs.version }}"
          
          echo "Base version: $BASE"
          echo "Current version: $CURRENT"
          
          if [ "$CURRENT" == "$BASE" ]; then
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "::error::Package version must be updated in package.json (currently $CURRENT)"
            exit 1
          else
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "✅ Version updated from $BASE to $CURRENT"
          fi

      - name: Add label and comment if version not updated
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            // Add label
            await github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['update package version']
            });
            
            // Add comment
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Version Check Failed**\n\nThe package.json version has not been updated. Please increment the version number before merging this PR.\n\nCurrent version: `${{ steps.current-version.outputs.version }}`'
            });

      - name: Remove label if version is updated
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.rest.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'update package version'
              });
            } catch (error) {
              // Label doesn't exist, ignore error
              console.log('Label not present or already removed');
            }
